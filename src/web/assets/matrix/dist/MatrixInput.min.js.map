{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./MatrixInput.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","$","Craft","MatrixInput","Garnish","Base","extend","id","blockTypes","blockTypesByHandle","inputNamePrefix","inputIdPrefix","showingAddBlockMenu","addBlockBtnGroupWidth","addBlockBtnContainerWidth","$container","$blockContainer","$addBlockBtnContainer","$addBlockBtnGroup","$addBlockBtnGroupBtns","blockSort","blockSelect","totalNewBlocks","init","settings","this","formatInputId","maxBlocks","setSettings","defaults","children","$addBlockMenuBtn","data","setNewBlockBtn","length","blockType","handle","$blocks","collapsedBlocks","getCollapsedBlockIds","DragSort","axis","filter","proxy","$targetItem","hasClass","getSelectedItems","collapseDraggees","magnetStrength","helperLagBase","helperOpacity","onSortChange","resetItemOrder","Select","multi","vertical","checkboxMode","$block","blockId","newMatch","match","parseInt","block","MatrixBlock","inArray","collapse","addListener","ev","type","target","addBlock","MenuBtn","onOptionSelect","option","updateAddBlockBtn","$doc","ready","trigger","width","addClass","removeClass","navigator","userAgent","indexOf","requestAnimationFrame","css","canAddMoreBlocks","$items","eq","$actionMenu","find","parent","$insertBefore","html","getBlockTypeByHandle","staticBlocks","window","draftEditor","pause","insertBefore","appendTo","$fieldsContainer","bodyHtml","getParsedBlockHtml","footHtml","getHiddenBlockCss","velocity","opacity","$bod","append","initUiElements","addItems","scrollContainerToElement","first","resume","collapseSelectedBlocks","callOnSelectedBlocks","expandSelectedBlocks","disableSelectedBlocks","enableSelectedBlocks","deleteSelectedBlocks","fn","$selectedItems","marginBottom","outerHeight","replace","RegExp","placeholderKey","collapsedBlockStorageKey","systemUid","localStorage","filterArray","split","setCollapsedBlockIds","ids","join","rememberCollapsedBlockId","Storage","push","forgetCollapsedBlockId","collapsedBlocksIndex","splice","matrix","$titlebar","$previewContainer","$collapsedInput","isNew","collapsed","substr","$menuBtn","menuBtn","menu","on","prev","next","hasAttr","_handleTitleBarClick","preventDefault","toggle","expand","animate","previewHtml","$fields","$inputs","inputPreviewText","j","$input","$maybeLightswitchContainer","text","getText","getInputPostVal","Array","trim","duration","height","show","hide","setTimeout","val","collapsedContainerHeight","expandedContainerHeight","displayValue","display","disable","enable","moveUp","$prev","moveDown","$next","insertAfter","onMenuOptionSelect","batchAction","totalSelected","isSelected","$option","confirm","selfDestruct","remove","jQuery"],"mappings":"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","file":"MatrixInput.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    /**\n     * Matrix input class\n     */\n    Craft.MatrixInput = Garnish.Base.extend({\n        id: null,\n        blockTypes: null,\n        blockTypesByHandle: null,\n        inputNamePrefix: null,\n        inputIdPrefix: null,\n\n        showingAddBlockMenu: false,\n        addBlockBtnGroupWidth: null,\n        addBlockBtnContainerWidth: null,\n\n        $container: null,\n        $blockContainer: null,\n        $addBlockBtnContainer: null,\n        $addBlockBtnGroup: null,\n        $addBlockBtnGroupBtns: null,\n\n        blockSort: null,\n        blockSelect: null,\n        totalNewBlocks: 0,\n\n        init: function(id, blockTypes, inputNamePrefix, settings) {\n            this.id = id;\n            this.blockTypes = blockTypes;\n            this.inputNamePrefix = inputNamePrefix;\n            this.inputIdPrefix = Craft.formatInputId(this.inputNamePrefix);\n\n            // see if settings was actually set to the maxBlocks value\n            if (typeof settings === 'number') {\n                settings = {maxBlocks: settings};\n            }\n            this.setSettings(settings, Craft.MatrixInput.defaults);\n\n            this.$container = $('#' + this.id);\n            this.$blockContainer = this.$container.children('.blocks');\n            this.$addBlockBtnContainer = this.$container.children('.buttons');\n            this.$addBlockBtnGroup = this.$addBlockBtnContainer.children('.btngroup');\n            this.$addBlockBtnGroupBtns = this.$addBlockBtnGroup.children('.btn');\n            this.$addBlockMenuBtn = this.$addBlockBtnContainer.children('.menubtn');\n\n            this.$container.data('matrix', this);\n\n            this.setNewBlockBtn();\n\n            this.blockTypesByHandle = {};\n\n            var i;\n\n            for (i = 0; i < this.blockTypes.length; i++) {\n                var blockType = this.blockTypes[i];\n                this.blockTypesByHandle[blockType.handle] = blockType;\n            }\n\n            var $blocks = this.$blockContainer.children(),\n                collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds();\n\n            this.blockSort = new Garnish.DragSort($blocks, {\n                handle: '> .actions > .move',\n                axis: 'y',\n                filter: $.proxy(function() {\n                    // Only return all the selected items if the target item is selected\n                    if (this.blockSort.$targetItem.hasClass('sel')) {\n                        return this.blockSelect.getSelectedItems();\n                    } else {\n                        return this.blockSort.$targetItem;\n                    }\n                }, this),\n                collapseDraggees: true,\n                magnetStrength: 4,\n                helperLagBase: 1.5,\n                helperOpacity: 0.9,\n                onSortChange: $.proxy(function() {\n                    this.blockSelect.resetItemOrder();\n                }, this)\n            });\n\n            this.blockSelect = new Garnish.Select(this.$blockContainer, $blocks, {\n                multi: true,\n                vertical: true,\n                handle: '> .checkbox, > .titlebar',\n                checkboxMode: true\n            });\n\n            for (i = 0; i < $blocks.length; i++) {\n                var $block = $($blocks[i]),\n                    blockId = $block.data('id');\n\n                // Is this a new block?\n                var newMatch = (typeof blockId === 'string' && blockId.match(/new(\\d+)/));\n\n                if (newMatch && newMatch[1] > this.totalNewBlocks) {\n                    this.totalNewBlocks = parseInt(newMatch[1]);\n                }\n\n                var block = new MatrixBlock(this, $block);\n\n                if (block.id && $.inArray('' + block.id, collapsedBlocks) !== -1) {\n                    block.collapse();\n                }\n            }\n\n            this.addListener(this.$addBlockBtnGroupBtns, 'click', function(ev) {\n                var type = $(ev.target).data('type');\n                this.addBlock(type);\n            });\n\n            new Garnish.MenuBtn(this.$addBlockMenuBtn,\n                {\n                    onOptionSelect: $.proxy(function(option) {\n                        var type = $(option).data('type');\n                        this.addBlock(type);\n                    }, this)\n                });\n\n            this.updateAddBlockBtn();\n\n            this.addListener(this.$container, 'resize', 'setNewBlockBtn');\n            Garnish.$doc.ready($.proxy(this, 'setNewBlockBtn'));\n\n            this.trigger('afterInit');\n        },\n\n        setNewBlockBtn: function() {\n            // Do we know what the button group width is yet?\n            if (!this.addBlockBtnGroupWidth) {\n                this.addBlockBtnGroupWidth = this.$addBlockBtnGroup.width();\n\n                if (!this.addBlockBtnGroupWidth) {\n                    return;\n                }\n            }\n\n            // Only check if the container width has resized\n            if (this.addBlockBtnContainerWidth !== (this.addBlockBtnContainerWidth = this.$addBlockBtnContainer.width())) {\n                if (this.addBlockBtnGroupWidth > this.addBlockBtnContainerWidth) {\n                    if (!this.showingAddBlockMenu) {\n                        this.$addBlockBtnGroup.addClass('hidden');\n                        this.$addBlockMenuBtn.removeClass('hidden');\n                        this.showingAddBlockMenu = true;\n                    }\n                } else {\n                    if (this.showingAddBlockMenu) {\n                        this.$addBlockMenuBtn.addClass('hidden');\n                        this.$addBlockBtnGroup.removeClass('hidden');\n                        this.showingAddBlockMenu = false;\n\n                        // Because Safari is awesome\n                        if (navigator.userAgent.indexOf('Safari') !== -1) {\n                            Garnish.requestAnimationFrame($.proxy(function() {\n                                this.$addBlockBtnGroup.css('opacity', 0.99);\n\n                                Garnish.requestAnimationFrame($.proxy(function() {\n                                    this.$addBlockBtnGroup.css('opacity', '');\n                                }, this));\n                            }, this));\n                        }\n                    }\n                }\n            }\n        },\n\n        canAddMoreBlocks: function() {\n            return (!this.maxBlocks || this.$blockContainer.children().length < this.maxBlocks);\n        },\n\n        updateAddBlockBtn: function() {\n            var i, block;\n\n            if (this.canAddMoreBlocks()) {\n                this.$addBlockBtnGroup.removeClass('disabled');\n                this.$addBlockMenuBtn.removeClass('disabled');\n\n                for (i = 0; i < this.blockSelect.$items.length; i++) {\n                    block = this.blockSelect.$items.eq(i).data('block');\n\n                    if (block) {\n                        block.$actionMenu.find('a[data-action=add]').parent().removeClass('disabled');\n                    }\n                }\n            } else {\n                this.$addBlockBtnGroup.addClass('disabled');\n                this.$addBlockMenuBtn.addClass('disabled');\n\n                for (i = 0; i < this.blockSelect.$items.length; i++) {\n                    block = this.blockSelect.$items.eq(i).data('block');\n\n                    if (block) {\n                        block.$actionMenu.find('a[data-action=add]').parent().addClass('disabled');\n                    }\n                }\n            }\n        },\n\n        addBlock: function(type, $insertBefore) {\n            if (!this.canAddMoreBlocks()) {\n                return;\n            }\n\n            this.totalNewBlocks++;\n\n            var id = 'new' + this.totalNewBlocks;\n\n            var html = `\n<div class=\"matrixblock\" data-id=\"${id}\" data-type=\"${type}\">\n  <input type=\"hidden\" name=\"${this.inputNamePrefix}[sortOrder][]\" value=\"${id}\"/>\n  <input type=\"hidden\" name=\"${this.inputNamePrefix}[blocks][${id}][type]\" value=\"${type}\"/>\n  <input type=\"hidden\" name=\"${this.inputNamePrefix}[blocks][${id}][enabled]\" value=\"1\"/>\n  <div class=\"titlebar\">\n    <div class=\"blocktype\">${this.getBlockTypeByHandle(type).name}</div>\n    <div class=\"preview\"></div>\n  </div>\n  <div class=\"checkbox\" title=\"${Craft.t('app', 'Select')}\"></div>\n  <div class=\"actions\">\n    <div class=\"status off\" title=\"${Craft.t('app', 'Disabled')}\"></div>\n    <a class=\"settings icon menubtn\" title=\"${Craft.t('app', 'Actions')}\" role=\"button\"></a> \n    <div class=\"menu\">\n      <ul class=\"padded\">\n        <li><a data-icon=\"collapse\" data-action=\"collapse\">${Craft.t('app', 'Collapse')}</a></li>\n        <li class=\"hidden\"><a data-icon=\"expand\" data-action=\"expand\">${Craft.t('app', 'Expand')}</a></li>\n        <li><a data-icon=\"disabled\" data-action=\"disable\">${Craft.t('app', 'Disable')}</a></li>\n        <li class=\"hidden\"><a data-icon=\"enabled\" data-action=\"enable\">${Craft.t('app', 'Enable')}</a></li>\n        <li><a data-icon=\"uarr\" data-action=\"moveUp\">${Craft.t('app', 'Move up')}</a></li>\n        <li><a data-icon=\"darr\" data-action=\"moveDown\">${Craft.t('app', 'Move down')}</a></li>\n      </ul>`;\n\n            if (!this.settings.staticBlocks) {\n                html += `\n      <hr class=\"padded\"/>\n      <ul class=\"padded\">\n        <li><a class=\"error\" data-icon=\"remove\" data-action=\"delete\">${Craft.t('app', 'Delete')}</a></li>\n      </ul>\n      <hr class=\"padded\"/>\n      <ul class=\"padded\">`;\n\n                for (var i = 0; i < this.blockTypes.length; i++) {\n                    var blockType = this.blockTypes[i];\n                    html += `\n        <li><a data-icon=\"plus\" data-action=\"add\" data-type=\"${blockType.handle}\">${Craft.t('app', 'Add {type} above', {type: blockType.name})}</a></li>`;\n                }\n\n                html += `\n      </ul>`\n            }\n\n            html += `\n    </div>\n    <a class=\"move icon\" title=\"${Craft.t('app', 'Reorder')}\" role=\"button\"></a>\n  </div>\n</div>`;\n\n            var $block = $(html);\n\n            // Pause the draft editor\n            if (window.draftEditor) {\n                window.draftEditor.pause();\n            }\n\n            if ($insertBefore) {\n                $block.insertBefore($insertBefore);\n            } else {\n                $block.appendTo(this.$blockContainer);\n            }\n\n            var $fieldsContainer = $('<div class=\"fields\"/>').appendTo($block),\n                bodyHtml = this.getParsedBlockHtml(this.blockTypesByHandle[type].bodyHtml, id),\n                footHtml = this.getParsedBlockHtml(this.blockTypesByHandle[type].footHtml, id);\n\n            $(bodyHtml).appendTo($fieldsContainer);\n\n            this.trigger('blockAdded', {\n                $block: $block\n            });\n\n            // Animate the block into position\n            $block.css(this.getHiddenBlockCss($block)).velocity({\n                opacity: 1,\n                'margin-bottom': 10\n            }, 'fast', $.proxy(function() {\n                $block.css('margin-bottom', '');\n                Garnish.$bod.append(footHtml);\n                Craft.initUiElements($fieldsContainer);\n                new MatrixBlock(this, $block);\n                this.blockSort.addItems($block);\n                this.blockSelect.addItems($block);\n                this.updateAddBlockBtn();\n\n                Garnish.requestAnimationFrame(function() {\n                    // Scroll to the block\n                    Garnish.scrollContainerToElement($block);\n\n                    // Focus on the first text input\n                    $block.find('.text,[contenteditable]').first().trigger('focus');\n\n                    // Resume the draft editor\n                    if (window.draftEditor) {\n                        window.draftEditor.resume();\n                    }\n                });\n            }, this));\n        },\n\n        getBlockTypeByHandle: function(handle) {\n            for (var i = 0; i < this.blockTypes.length; i++) {\n                if (this.blockTypes[i].handle === handle) {\n                    return this.blockTypes[i];\n                }\n            }\n        },\n\n        collapseSelectedBlocks: function() {\n            this.callOnSelectedBlocks('collapse');\n        },\n\n        expandSelectedBlocks: function() {\n            this.callOnSelectedBlocks('expand');\n        },\n\n        disableSelectedBlocks: function() {\n            this.callOnSelectedBlocks('disable');\n        },\n\n        enableSelectedBlocks: function() {\n            this.callOnSelectedBlocks('enable');\n        },\n\n        deleteSelectedBlocks: function() {\n            this.callOnSelectedBlocks('selfDestruct');\n        },\n\n        callOnSelectedBlocks: function(fn) {\n            for (var i = 0; i < this.blockSelect.$selectedItems.length; i++) {\n                this.blockSelect.$selectedItems.eq(i).data('block')[fn]();\n            }\n        },\n\n        getHiddenBlockCss: function($block) {\n            return {\n                opacity: 0,\n                marginBottom: -($block.outerHeight())\n            };\n        },\n\n        getParsedBlockHtml: function(html, id) {\n            if (typeof html === 'string') {\n                return html.replace(new RegExp(`__BLOCK_${this.settings.placeholderKey}__`, 'g'), id);\n            } else {\n                return '';\n            }\n        },\n\n        get maxBlocks() {\n            return this.settings.maxBlocks;\n        },\n    }, {\n        defaults: {\n            placeholderKey: null,\n            maxBlocks: null,\n            staticBlocks: false,\n        },\n\n        collapsedBlockStorageKey: 'Craft-' + Craft.systemUid + '.MatrixInput.collapsedBlocks',\n\n        getCollapsedBlockIds: function() {\n            if (typeof localStorage[Craft.MatrixInput.collapsedBlockStorageKey] === 'string') {\n                return Craft.filterArray(localStorage[Craft.MatrixInput.collapsedBlockStorageKey].split(','));\n            } else {\n                return [];\n            }\n        },\n\n        setCollapsedBlockIds: function(ids) {\n            localStorage[Craft.MatrixInput.collapsedBlockStorageKey] = ids.join(',');\n        },\n\n        rememberCollapsedBlockId: function(id) {\n            if (typeof Storage !== 'undefined') {\n                var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds();\n\n                if ($.inArray('' + id, collapsedBlocks) === -1) {\n                    collapsedBlocks.push(id);\n                    Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n                }\n            }\n        },\n\n        forgetCollapsedBlockId: function(id) {\n            if (typeof Storage !== 'undefined') {\n                var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds(),\n                    collapsedBlocksIndex = $.inArray('' + id, collapsedBlocks);\n\n                if (collapsedBlocksIndex !== -1) {\n                    collapsedBlocks.splice(collapsedBlocksIndex, 1);\n                    Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n                }\n            }\n        }\n    });\n\n    var MatrixBlock = Garnish.Base.extend({\n        matrix: null,\n        $container: null,\n        $titlebar: null,\n        $fieldsContainer: null,\n        $previewContainer: null,\n        $actionMenu: null,\n        $collapsedInput: null,\n\n        isNew: null,\n        id: null,\n\n        collapsed: false,\n\n        init: function(matrix, $container) {\n            this.matrix = matrix;\n            this.$container = $container;\n            this.$titlebar = $container.children('.titlebar');\n            this.$previewContainer = this.$titlebar.children('.preview');\n            this.$fieldsContainer = $container.children('.fields');\n\n            this.$container.data('block', this);\n\n            this.id = this.$container.data('id');\n            this.isNew = (!this.id || (typeof this.id === 'string' && this.id.substr(0, 3) === 'new'));\n\n            var $menuBtn = this.$container.find('> .actions > .settings'),\n                menuBtn = new Garnish.MenuBtn($menuBtn);\n\n            this.$actionMenu = menuBtn.menu.$container;\n\n            menuBtn.menu.settings.onOptionSelect = $.proxy(this, 'onMenuOptionSelect');\n\n            menuBtn.menu.on('show', () => {\n                this.$container.addClass('active');\n                if (this.$container.prev('.matrixblock').length) {\n                    this.$actionMenu.find('a[data-action=moveUp]:first').parent().removeClass('hidden');\n                } else {\n                    this.$actionMenu.find('a[data-action=moveUp]:first').parent().addClass('hidden');\n                }\n                if (this.$container.next('.matrixblock').length) {\n                    this.$actionMenu.find('a[data-action=moveDown]:first').parent().removeClass('hidden');\n                } else {\n                    this.$actionMenu.find('a[data-action=moveDown]:first').parent().addClass('hidden');\n                }\n            });\n            menuBtn.menu.on('hide', () => {\n                this.$container.removeClass('active');\n            });\n\n            // Was this block already collapsed?\n            if (Garnish.hasAttr(this.$container, 'data-collapsed')) {\n                this.collapse();\n            }\n\n            this._handleTitleBarClick = function(ev) {\n                ev.preventDefault();\n                this.toggle();\n            };\n\n            this.addListener(this.$titlebar, 'doubletap', this._handleTitleBarClick);\n        },\n\n        toggle: function() {\n            if (this.collapsed) {\n                this.expand();\n            } else {\n                this.collapse(true);\n            }\n        },\n\n        collapse: function(animate) {\n            if (this.collapsed) {\n                return;\n            }\n\n            this.$container.addClass('collapsed');\n\n            var previewHtml = '',\n                $fields = this.$fieldsContainer.children().children();\n\n            for (var i = 0; i < $fields.length; i++) {\n                var $field = $($fields[i]),\n                    $inputs = $field.children('.input').find('select,input[type!=\"hidden\"],textarea,.label'),\n                    inputPreviewText = '';\n\n                for (var j = 0; j < $inputs.length; j++) {\n                    var $input = $($inputs[j]),\n                        value;\n\n                    if ($input.hasClass('label')) {\n                        var $maybeLightswitchContainer = $input.parent().parent();\n\n                        if ($maybeLightswitchContainer.hasClass('lightswitch') && (\n                            ($maybeLightswitchContainer.hasClass('on') && $input.hasClass('off')) ||\n                            (!$maybeLightswitchContainer.hasClass('on') && $input.hasClass('on'))\n                        )) {\n                            continue;\n                        }\n\n                        value = $input.text();\n                    } else {\n                        value = Craft.getText(Garnish.getInputPostVal($input));\n                    }\n\n                    if (value instanceof Array) {\n                        value = value.join(', ');\n                    }\n\n                    if (value) {\n                        value = Craft.trim(value);\n\n                        if (value) {\n                            if (inputPreviewText) {\n                                inputPreviewText += ', ';\n                            }\n\n                            inputPreviewText += value;\n                        }\n                    }\n                }\n\n                if (inputPreviewText) {\n                    previewHtml += (previewHtml ? ' <span>|</span> ' : '') + inputPreviewText;\n                }\n            }\n\n            this.$previewContainer.html(previewHtml);\n\n            this.$fieldsContainer.velocity('stop');\n            this.$container.velocity('stop');\n\n            if (animate) {\n                this.$fieldsContainer.velocity('fadeOut', {duration: 'fast'});\n                this.$container.velocity({height: 16}, 'fast');\n            } else {\n                this.$previewContainer.show();\n                this.$fieldsContainer.hide();\n                this.$container.css({height: 16});\n            }\n\n            setTimeout($.proxy(function() {\n                this.$actionMenu.find('a[data-action=collapse]:first').parent().addClass('hidden');\n                this.$actionMenu.find('a[data-action=expand]:first').parent().removeClass('hidden');\n            }, this), 200);\n\n            // Remember that?\n            if (!this.isNew) {\n                Craft.MatrixInput.rememberCollapsedBlockId(this.id);\n            } else {\n                if (!this.$collapsedInput) {\n                    this.$collapsedInput = $('<input type=\"hidden\" name=\"' + this.matrix.inputNamePrefix + '[blocks][' + this.id + '][collapsed]\" value=\"1\"/>').appendTo(this.$container);\n                } else {\n                    this.$collapsedInput.val('1');\n                }\n            }\n\n            this.collapsed = true;\n        },\n\n        expand: function() {\n            if (!this.collapsed) {\n                return;\n            }\n\n            this.$container.removeClass('collapsed');\n\n            this.$fieldsContainer.velocity('stop');\n            this.$container.velocity('stop');\n\n            var collapsedContainerHeight = this.$container.height();\n            this.$container.height('auto');\n            this.$fieldsContainer.show();\n            var expandedContainerHeight = this.$container.height();\n            var displayValue = this.$fieldsContainer.css('display') || 'block';\n            this.$container.height(collapsedContainerHeight);\n            this.$fieldsContainer.hide().velocity('fadeIn', {duration: 'fast', display: displayValue});\n            this.$container.velocity({height: expandedContainerHeight}, 'fast', $.proxy(function() {\n                this.$previewContainer.html('');\n                this.$container.height('auto');\n            }, this));\n\n            setTimeout($.proxy(function() {\n                this.$actionMenu.find('a[data-action=collapse]:first').parent().removeClass('hidden');\n                this.$actionMenu.find('a[data-action=expand]:first').parent().addClass('hidden');\n            }, this), 200);\n\n            // Remember that?\n            if (!this.isNew && typeof Storage !== 'undefined') {\n                var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds(),\n                    collapsedBlocksIndex = $.inArray('' + this.id, collapsedBlocks);\n\n                if (collapsedBlocksIndex !== -1) {\n                    collapsedBlocks.splice(collapsedBlocksIndex, 1);\n                    Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n                }\n            }\n\n            if (!this.isNew) {\n                Craft.MatrixInput.forgetCollapsedBlockId(this.id);\n            } else if (this.$collapsedInput) {\n                this.$collapsedInput.val('');\n            }\n\n            this.collapsed = false;\n        },\n\n        disable: function() {\n            this.$container.children('input[name$=\"[enabled]\"]:first').val('');\n            this.$container.addClass('disabled');\n\n            setTimeout($.proxy(function() {\n                this.$actionMenu.find('a[data-action=disable]:first').parent().addClass('hidden');\n                this.$actionMenu.find('a[data-action=enable]:first').parent().removeClass('hidden');\n            }, this), 200);\n\n            this.collapse(true);\n        },\n\n        enable: function() {\n            this.$container.children('input[name$=\"[enabled]\"]:first').val('1');\n            this.$container.removeClass('disabled');\n\n            setTimeout($.proxy(function() {\n                this.$actionMenu.find('a[data-action=disable]:first').parent().removeClass('hidden');\n                this.$actionMenu.find('a[data-action=enable]:first').parent().addClass('hidden');\n            }, this), 200);\n        },\n\n        moveUp: function() {\n            let $prev = this.$container.prev('.matrixblock');\n            if ($prev.length) {\n                this.$container.insertBefore($prev);\n                this.matrix.blockSelect.resetItemOrder();\n            }\n        },\n\n        moveDown: function() {\n            let $next = this.$container.next('.matrixblock');\n            if ($next.length) {\n                this.$container.insertAfter($next);\n                this.matrix.blockSelect.resetItemOrder();\n            }\n        },\n\n        onMenuOptionSelect: function(option) {\n            var batchAction = (this.matrix.blockSelect.totalSelected > 1 && this.matrix.blockSelect.isSelected(this.$container)),\n                $option = $(option);\n\n            switch ($option.data('action')) {\n                case 'collapse': {\n                    if (batchAction) {\n                        this.matrix.collapseSelectedBlocks();\n                    } else {\n                        this.collapse(true);\n                    }\n\n                    break;\n                }\n\n                case 'expand': {\n                    if (batchAction) {\n                        this.matrix.expandSelectedBlocks();\n                    } else {\n                        this.expand();\n                    }\n\n                    break;\n                }\n\n                case 'disable': {\n                    if (batchAction) {\n                        this.matrix.disableSelectedBlocks();\n                    } else {\n                        this.disable();\n                    }\n\n                    break;\n                }\n\n                case 'enable': {\n                    if (batchAction) {\n                        this.matrix.enableSelectedBlocks();\n                    } else {\n                        this.enable();\n                        this.expand();\n                    }\n\n                    break;\n                }\n\n                case 'moveUp': {\n                    this.moveUp();\n                    break;\n                }\n\n                case 'moveDown': {\n                    this.moveDown();\n                    break;\n                }\n\n                case 'add': {\n                    var type = $option.data('type');\n                    this.matrix.addBlock(type, this.$container);\n                    break;\n                }\n\n                case 'delete': {\n                    if (batchAction) {\n                        if (confirm(Craft.t('app', 'Are you sure you want to delete the selected blocks?'))) {\n                            this.matrix.deleteSelectedBlocks();\n                        }\n                    } else {\n                        this.selfDestruct();\n                    }\n\n                    break;\n                }\n            }\n        },\n\n        selfDestruct: function() {\n            // Pause the draft editor\n            if (window.draftEditor) {\n                window.draftEditor.pause();\n            }\n\n            this.$container.velocity(this.matrix.getHiddenBlockCss(this.$container), 'fast', $.proxy(function() {\n                this.$container.remove();\n                this.matrix.updateAddBlockBtn();\n\n                // Resume the draft editor\n                if (window.draftEditor) {\n                    window.draftEditor.resume();\n                }\n\n                this.matrix.trigger('blockDeleted', {\n                    $block: this.$container,\n                });\n            }, this));\n        }\n    });\n})(jQuery);\n"],"sourceRoot":""}