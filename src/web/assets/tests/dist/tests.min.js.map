{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./tests.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","QUnit","test","assert","Craft","baseUrl","baseCpUrl","baseSiteUrl","actionUrl","omitScriptNameInUrls","usePathInfo","actionTrigger","path","language","translations","maxUploadSize","equal","getUrl","getSiteUrl","getActionUrl"],"mappings":"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","file":"tests.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/** global: Craft */\nQUnit.test('Craft.getUrl()', function(assert) {\n    // Setup for a site with path info\n    Craft.baseUrl = 'http://craft.dev/admin';\n    Craft.baseCpUrl = 'http://craft.dev/admin';\n    Craft.baseSiteUrl = 'http://craft.dev/';\n    Craft.actionUrl = 'http://craft.dev/index.php/admin/actions';\n    Craft.omitScriptNameInUrls = true;\n    Craft.usePathInfo = true;\n    Craft.actionTrigger = 'actions';\n    Craft.path = '';\n    Craft.language = 'en_us';\n    Craft.translations = [];\n    Craft.maxUploadSize = 33554432;\n\n    // Test an absolute URL\n    assert.equal(Craft.getUrl('http://example.com/'), 'http://example.com/');\n\n    assert.equal(Craft.getUrl(), 'http://craft.dev/admin');\n    assert.equal(Craft.getUrl(''), 'http://craft.dev/admin');\n\n    assert.equal(Craft.getUrl('', {'foo': 1, 'bar': 1}), 'http://craft.dev/admin?foo=1&bar=1');\n    assert.equal(Craft.getUrl('', 'foo=1&bar=1'), 'http://craft.dev/admin?foo=1&bar=1');\n    assert.equal(Craft.getUrl('', '?foo=1&bar=1&'), 'http://craft.dev/admin?foo=1&bar=1');\n    assert.equal(Craft.getUrl('', {'foo': 1, '#': 'bar'}), 'http://craft.dev/admin?foo=1#bar');\n    assert.equal(Craft.getUrl('about', {'foo': 1, 'bar': 1}), 'http://craft.dev/admin/about?foo=1&bar=1');\n    assert.equal(Craft.getUrl('about', 'foo=1&bar=1'), 'http://craft.dev/admin/about?foo=1&bar=1');\n    assert.equal(Craft.getUrl('about', '?foo=1&bar=1&'), 'http://craft.dev/admin/about?foo=1&bar=1');\n    assert.equal(Craft.getUrl('about?foo=1', 'bar=1'), 'http://craft.dev/admin/about?foo=1&bar=1');\n    assert.equal(Craft.getUrl('about?foo=1', {'bar': 1}), 'http://craft.dev/admin/about?foo=1&bar=1');\n    assert.equal(Craft.getUrl('about', {'foo': 1, '#': 'bar'}), 'http://craft.dev/admin/about?foo=1#bar');\n\n    assert.equal(Craft.getSiteUrl('', {'foo': 1, 'bar': 1}), 'http://craft.dev/?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('', 'foo=1&bar=1'), 'http://craft.dev/?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('', '?foo=1&bar=1&'), 'http://craft.dev/?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('', {'foo': 1, '#': 'bar'}), 'http://craft.dev/?foo=1#bar');\n    assert.equal(Craft.getSiteUrl('about', {'foo': 1, 'bar': 1}), 'http://craft.dev/about?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('about', 'foo=1&bar=1'), 'http://craft.dev/about?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('about', '?foo=1&bar=1&'), 'http://craft.dev/about?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('about?foo=1', 'bar=1'), 'http://craft.dev/about?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('about?foo=1', {'bar': 1}), 'http://craft.dev/about?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('about', {'foo': 1, '#': 'bar'}), 'http://craft.dev/about?foo=1#bar');\n\n    assert.equal(Craft.getActionUrl('', {'foo': 1, 'bar': 1}), 'http://craft.dev/index.php/admin/actions?foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('', 'foo=1&bar=1'), 'http://craft.dev/index.php/admin/actions?foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('', '?foo=1&bar=1&'), 'http://craft.dev/index.php/admin/actions?foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('', {'foo': 1, '#': 'bar'}), 'http://craft.dev/index.php/admin/actions?foo=1#bar');\n    assert.equal(Craft.getActionUrl('about', {'foo': 1, 'bar': 1}), 'http://craft.dev/index.php/admin/actions/about?foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('about', 'foo=1&bar=1'), 'http://craft.dev/index.php/admin/actions/about?foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('about', '?foo=1&bar=1&'), 'http://craft.dev/index.php/admin/actions/about?foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('about?foo=1', 'bar=1'), 'http://craft.dev/index.php/admin/actions/about?foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('about?foo=1', {'bar': 1}), 'http://craft.dev/index.php/admin/actions/about?foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('about', {'foo': 1, '#': 'bar'}), 'http://craft.dev/index.php/admin/actions/about?foo=1#bar');\n\n    // Don't omit the script name\n    Craft.baseUrl = 'http://craft.dev/index.php/admin';\n    Craft.baseCpUrl = 'http://craft.dev/index.php/admin';\n    Craft.baseSiteUrl = 'http://craft.dev/';\n    Craft.actionUrl = 'http://craft.dev/index.php/admin/actions';\n    Craft.omitScriptNameInUrls = false;\n\n    assert.equal(Craft.getUrl(), 'http://craft.dev/index.php/admin');\n    assert.equal(Craft.getUrl(''), 'http://craft.dev/index.php/admin');\n\n    assert.equal(Craft.getUrl('', {'foo': 1, 'bar': 1}), 'http://craft.dev/index.php/admin?foo=1&bar=1');\n    assert.equal(Craft.getUrl('', 'foo=1&bar=1'), 'http://craft.dev/index.php/admin?foo=1&bar=1');\n    assert.equal(Craft.getUrl('', '?foo=1&bar=1&'), 'http://craft.dev/index.php/admin?foo=1&bar=1');\n    assert.equal(Craft.getUrl('', {'foo': 1, '#': 'bar'}), 'http://craft.dev/index.php/admin?foo=1#bar');\n    assert.equal(Craft.getUrl('about', {'foo': 1, 'bar': 1}), 'http://craft.dev/index.php/admin/about?foo=1&bar=1');\n    assert.equal(Craft.getUrl('about', 'foo=1&bar=1'), 'http://craft.dev/index.php/admin/about?foo=1&bar=1');\n    assert.equal(Craft.getUrl('about', '?foo=1&bar=1&'), 'http://craft.dev/index.php/admin/about?foo=1&bar=1');\n    assert.equal(Craft.getUrl('about?foo=1', 'bar=1'), 'http://craft.dev/index.php/admin/about?foo=1&bar=1');\n    assert.equal(Craft.getUrl('about?foo=1', {'bar': 1}), 'http://craft.dev/index.php/admin/about?foo=1&bar=1');\n    assert.equal(Craft.getUrl('about', {'foo': 1, '#': 'bar'}), 'http://craft.dev/index.php/admin/about?foo=1#bar');\n\n    assert.equal(Craft.getSiteUrl('', {'foo': 1, 'bar': 1}), 'http://craft.dev/?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('', 'foo=1&bar=1'), 'http://craft.dev/?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('', '?foo=1&bar=1&'), 'http://craft.dev/?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('', {'foo': 1, '#': 'bar'}), 'http://craft.dev/?foo=1#bar');\n    assert.equal(Craft.getSiteUrl('about', {'foo': 1, 'bar': 1}), 'http://craft.dev/index.php/about?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('about', 'foo=1&bar=1'), 'http://craft.dev/index.php/about?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('about', '?foo=1&bar=1&'), 'http://craft.dev/index.php/about?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('about?foo=1', 'bar=1'), 'http://craft.dev/index.php/about?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('about?foo=1', {'bar': 1}), 'http://craft.dev/index.php/about?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('about', {'foo': 1, '#': 'bar'}), 'http://craft.dev/index.php/about?foo=1#bar');\n\n    assert.equal(Craft.getActionUrl('', {'foo': 1, 'bar': 1}), 'http://craft.dev/index.php/admin/actions?foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('', 'foo=1&bar=1'), 'http://craft.dev/index.php/admin/actions?foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('', '?foo=1&bar=1&'), 'http://craft.dev/index.php/admin/actions?foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('', {'foo': 1, '#': 'bar'}), 'http://craft.dev/index.php/admin/actions?foo=1#bar');\n    assert.equal(Craft.getActionUrl('about', {'foo': 1, 'bar': 1}), 'http://craft.dev/index.php/admin/actions/about?foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('about', 'foo=1&bar=1'), 'http://craft.dev/index.php/admin/actions/about?foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('about', '?foo=1&bar=1&'), 'http://craft.dev/index.php/admin/actions/about?foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('about?foo=1', 'bar=1'), 'http://craft.dev/index.php/admin/actions/about?foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('about?foo=1', {'bar': 1}), 'http://craft.dev/index.php/admin/actions/about?foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('about', {'foo': 1, '#': 'bar'}), 'http://craft.dev/index.php/admin/actions/about?foo=1#bar');\n\n    // Don't use path info\n    Craft.baseUrl = 'http://craft.dev/?p=admin';\n    Craft.baseCpUrl = 'http://craft.dev/?p=admin';\n    Craft.baseSiteUrl = 'http://craft.dev/';\n    Craft.actionUrl = 'http://craft.dev/?p=admin/actions';\n    Craft.usePathInfo = false;\n\n    assert.equal(Craft.getUrl(), 'http://craft.dev/?p=admin');\n    assert.equal(Craft.getUrl(''), 'http://craft.dev/?p=admin');\n\n    assert.equal(Craft.getUrl('', {'foo': 1, 'bar': 1}), 'http://craft.dev/?p=admin&foo=1&bar=1');\n    assert.equal(Craft.getUrl('', 'foo=1&bar=1'), 'http://craft.dev/?p=admin&foo=1&bar=1');\n    assert.equal(Craft.getUrl('', '?foo=1&bar=1&'), 'http://craft.dev/?p=admin&foo=1&bar=1');\n    assert.equal(Craft.getUrl('', {'foo': 1, '#': 'bar'}), 'http://craft.dev/?p=admin&foo=1#bar');\n    assert.equal(Craft.getUrl('about', {'foo': 1, 'bar': 1}), 'http://craft.dev/?p=admin/about&foo=1&bar=1');\n    assert.equal(Craft.getUrl('about', 'foo=1&bar=1'), 'http://craft.dev/?p=admin/about&foo=1&bar=1');\n    assert.equal(Craft.getUrl('about', '?foo=1&bar=1&'), 'http://craft.dev/?p=admin/about&foo=1&bar=1');\n    assert.equal(Craft.getUrl('about?foo=1', 'bar=1'), 'http://craft.dev/?p=admin/about&foo=1&bar=1');\n    assert.equal(Craft.getUrl('about?foo=1', {'bar': 1}), 'http://craft.dev/?p=admin/about&foo=1&bar=1');\n    assert.equal(Craft.getUrl('about', {'foo': 1, '#': 'bar'}), 'http://craft.dev/?p=admin/about&foo=1#bar');\n\n    assert.equal(Craft.getSiteUrl('', {'foo': 1, 'bar': 1}), 'http://craft.dev/?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('', 'foo=1&bar=1'), 'http://craft.dev/?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('', '?foo=1&bar=1&'), 'http://craft.dev/?foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('', {'foo': 1, '#': 'bar'}), 'http://craft.dev/?foo=1#bar');\n    assert.equal(Craft.getSiteUrl('about', {'foo': 1, 'bar': 1}), 'http://craft.dev/?p=about&foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('about', 'foo=1&bar=1'), 'http://craft.dev/?p=about&foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('about', '?foo=1&bar=1&'), 'http://craft.dev/?p=about&foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('about?foo=1', 'bar=1'), 'http://craft.dev/?p=about&foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('about?foo=1', {'bar': 1}), 'http://craft.dev/?p=about&foo=1&bar=1');\n    assert.equal(Craft.getSiteUrl('about', {'foo': 1, '#': 'bar'}), 'http://craft.dev/?p=about&foo=1#bar');\n\n    assert.equal(Craft.getActionUrl('', {'foo': 1, 'bar': 1}), 'http://craft.dev/?p=admin/actions&foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('', 'foo=1&bar=1'), 'http://craft.dev/?p=admin/actions&foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('', '?foo=1&bar=1&'), 'http://craft.dev/?p=admin/actions&foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('', {'foo': 1, '#': 'bar'}), 'http://craft.dev/?p=admin/actions&foo=1#bar');\n    assert.equal(Craft.getActionUrl('about', {'foo': 1, 'bar': 1}), 'http://craft.dev/?p=admin/actions/about&foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('about', 'foo=1&bar=1'), 'http://craft.dev/?p=admin/actions/about&foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('about', '?foo=1&bar=1&'), 'http://craft.dev/?p=admin/actions/about&foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('about?foo=1', 'bar=1'), 'http://craft.dev/?p=admin/actions/about&foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('about?foo=1', {'bar': 1}), 'http://craft.dev/?p=admin/actions/about&foo=1&bar=1');\n    assert.equal(Craft.getActionUrl('about', {'foo': 1, '#': 'bar'}), 'http://craft.dev/?p=admin/actions/about&foo=1#bar');\n\n    Craft.baseUrl = \"http://craft.dev/admin\";\n    Craft.baseCpUrl = \"http://craft.dev/admin\";\n    Craft.baseSiteUrl = \"http://craft.dev/\";\n    Craft.actionUrl = \"http://craft.dev/index.php?p=admin/actions\";\n    Craft.omitScriptNameInUrls = true;\n    Craft.usePathInfo = false;\n\n    assert.equal(Craft.getActionUrl('foo/bar'), 'http://craft.dev/index.php?p=admin/actions/foo/bar');\n});\n"],"sourceRoot":""}